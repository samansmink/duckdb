name: Python
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - 'test/**'
      - 'tools/**'
      - '!tools/pythonpkg/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/Python.yml'

  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - 'test/**'
      - 'tools/**'
      - '!tools/pythonpkg/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/Python.yml'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  manylinux-extensions-aarch64:
    name: Linux Extensions (manylinux_2_28_aarch64)
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64
    env:
      GEN: ninja

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Should be good enough?
      - uses: ./.github/actions/manylinux_2014_setup
        with:
          vcpkg: 1
          openssl: 1
          ccache: 1
          ssh: 1

      - uses: ./.github/actions/build_extensions
        with:
          vcpkg_target_triplet: arm64-linux
          post_install: rm build/release/src/libduckdb*
          deploy_as: linux_arm64
          s3_id: ${{ secrets.S3_ID }}
          s3_key: ${{ secrets.S3_KEY }}
          signing_pk: ${{ secrets.DUCKDB_EXTENSION_SIGNING_PK }}
          run_tests: 0
          run_autoload_tests: 0
          treat_warn_as_error: 0
          ninja: 1
          override_cc: aarch64-redhat-linux-gcc
          override_cxx: aarch64-redhat-linux-g++

      - uses: actions/upload-artifact@v3
        with:
          name: manylinux-extensions-arm64
          path: |
            build/release/extension/*/*.duckdb_extension

  linux-python3:
    name: Python 3 Linux
    runs-on: ubuntu-20.04
    needs: manylinux-extensions-aarch64
    strategy:
      matrix:
        arch: [aarch64]
        python_build: [cp37-*, cp38-*, cp39-*, cp310-*, cp311-*]
    env:
      CIBW_BUILD: ${{ matrix.python_build}}
      CIBW_SKIP: '*-musllinux_aarch64'
      CIBW_ARCHS: ${{ matrix.arch == 'aarch64' && 'aarch64' || 'auto64' }}
      SETUPTOOLS_SCM_NO_LOCAL: 'yes'
      PYTEST_TIMEOUT: '600'
      DUCKDB_BUILD_UNITY: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      if: ${{ matrix.arch == 'aarch64' }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Install
      shell: bash
      run: |
        pip install cibuildwheel twine
        python -m pip install numpy --config-settings=setup-args="-Dallow-noblas=true"

    - name: List extensions to be tested
      shell: bash
      run: |
        find tools/pythonpkg -maxdepth 2 -type f -name "*.duckdb_extension"

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}-${{ matrix.arch }}-${{ matrix.python_build }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

    - name: Build
      shell: bash
      run: |
        cd tools/pythonpkg
        python setup.py sdist
        mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        ls duckdb_tarball
        export DISTUTILS_C_COMPILER_LAUNCHER=ccache
        # TODO: Use ccache inside container, see https://github.com/pypa/cibuildwheel/issues/1030
        if [[ "$GITHUB_REF" =~ ^refs/tags/v.+$ ]] ; then
          export CIBW_TEST_COMMAND='python -m pytest {project}/tests/fast/api/test_dbapi00.py  --verbose'
        fi
        cibuildwheel --output-dir wheelhouse --config-file cibw.toml duckdb_tarball
        ls wheelhouse

    - name: Deploy
      env:
        TWINE_USERNAME: '__token__'
        TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
      shell: bash
      run: |
        python scripts/asset-upload-gha.py duckdb_python_src.tar.gz=tools/pythonpkg/dist/duckdb-*.tar.gz
        if [[ "$GITHUB_REF" =~ ^(refs/heads/main|refs/tags/v.+)$ && "$GITHUB_REPOSITORY" = "duckdb/duckdb" ]] ; then
          twine upload --non-interactive --disable-progress-bar --skip-existing tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz
        fi