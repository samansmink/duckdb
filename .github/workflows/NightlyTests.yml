name: NightlyTests
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    paths-ignore:
      - '**'
      - '!.github/workflows/NightlyTests.yml'
      - '!.github/patches/duckdb-wasm/**'
  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**'
      - '!.github/workflows/NightlyTests.yml'
      - '!.github/patches/duckdb-wasm/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  DUCKDB_WASM_VERSION: "cf2048bd6d669ffa05c56d7d453e09e99de8b87e"
  CCACHE_SAVE: ${{ github.repository != 'duckdb/duckdb' }}
  BASE_BRANCH: ${{ github.base_ref || (endsWith(github.ref, '_feature') && 'feature' || 'main') }}

jobs:
  linux-httpfs:
    name: Linux HTTPFS
    runs-on: ubuntu-20.04
    env:
      BUILD_HTTPFS: 1
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_PARQUET: 1
      BUILD_JSON: 1
      S3_TEST_SERVER_AVAILABLE: 1
      AWS_DEFAULT_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: minio_duckdb_user
      AWS_SECRET_ACCESS_KEY: minio_duckdb_user_password
      DUCKDB_S3_ENDPOINT: duckdb-minio.com:9000
      DUCKDB_S3_USE_SSL: false
      HTTP_PROXY_PUBLIC: localhost:3128
      HTTP_PROXY_PRIVATE: localhost:3129
      HTTP_PROXY_PRIVATE_USERNAME: john
      HTTP_PROXY_PRIVATE_PASSWORD: doe

      GEN: ninja

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Ninja
      shell: bash
      run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build

    - name: Install and run http proxy squid
      shell: bash
      run: |
        sudo apt install squid
        ./scripts/run_squid.sh --port 3128 --log_dir squid_logs &
        ./scripts/run_squid.sh --port 3129 --log_dir squid_auth_logs --auth &

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

    - name: Build
      shell: bash
      run: make

    - name: Start test server & run tests
      shell: bash
      run: |
        sudo ./scripts/install_s3_test_server.sh
        ./scripts/generate_presigned_url.sh
        source ./scripts/run_s3_test_server.sh
        source ./scripts/set_s3_test_server_variables.sh
        sleep 60
       
        python3 scripts/get_test_list.py --file-contains 'require httpfs' --list '"*"' > test.list
        python3 scripts/run_tests_one_by_one.py ./build/release/test/unittest '-f test.list'
        python3 scripts/run_tests_one_by_one.py ./build/release/test/unittest '[secret]'
